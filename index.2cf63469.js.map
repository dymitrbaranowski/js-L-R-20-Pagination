{"mappings":"AAuBA,IAAMA,OAASC,SAASC,cAAc,aAElCC,QAAU,CACZC,KAAM,KACNC,WAAY,QACZC,UAAW,GAGTC,SAAW,IAAIC,qBAAqBC,SAAUN,SAClD,SAASM,SAASC,GAChBC,QAAQC,IAAIF,E,CAGd,IAAMG,SAAW,gCACXC,SAAW,qBACXC,QAAU,mCACVC,KAAOf,SAASC,cAAc,YAC9Be,SAAWhB,SAASC,cAAc,YACpCgB,YAAc,EAIlB,SAASC,SAEPC,YADAF,aAAe,GAEZG,MAAK,SAAAC,GACJN,KAAKO,mBAAmB,YAAaC,aAAaF,EAAKG,UAEnDH,EAAKI,OAASJ,EAAKK,cACrBV,SAASW,QAAS,E,IAGrBC,OAAM,SAAAC,G,OAAOnB,QAAQC,IAAIkB,E,IAG9B,SAASV,c,IAAYM,EAAAK,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAC1B,OAAOE,MAAM,GAAcC,OAAXrB,UAA+BqB,OAApBpB,SAAS,aAA2BoB,OAAhBnB,QAAQ,UAAamB,OAALR,IAAQL,MACrE,SAAAc,GACE,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAGvB,OAAOH,EAAKI,M,IAgBlB,SAASf,aAAagB,GACpB,OAAOA,EACJC,KACC,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,M,MAAY,sDACkCV,OAArBS,EAAY,WACjDT,OAD0DU,EAAM,gBAC1DV,OAANU,EAAM,e,IAGXC,KAAK,G,CA9CV5B,SAAS6B,iBAAiB,QAAS3B,QA0BnCC,cACGC,MAAK,SAAAC,GACJX,QAAQC,IAAIU,GACZN,KAAKO,mBAAmB,YAAaC,aAAaF,EAAKG,UAEvDlB,SAASwC,QAAQ/C,QACbsB,EAAKI,OAASJ,EAAKK,cACrBV,SAASW,QAAS,E,IAGrBC,OAAM,SAAAC,G,OAAOnB,QAAQC,IAAIkB,E,IAe5B,IAAIkB,QAAU,EAGd,SAASC,WACPD,SAAW,EACXrC,QAAQC,IAAIoC,Q,CAJd/C,SAAS6C,iBAAiB,SAAUG","sources":["src/script.js"],"sourcesContent":["// XJlq9OFMcHAy8pAQK7xj\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n// const BASE_URL = 'https://the-one-api.dev/v2/';\n// const END_POINT = 'character';\n// const KEY = '7KAdfd-upWP7afmgHvI7';\n// function getCharacter() {\n//   const param = new URLSearchParams({\n//     limit: 30,\n//     page: 1,\n//   });\n\n//   const option = {\n//     method: 'GET',\n//     headers: {\n//       Authorization: `Bearer ${KEY}`,\n//     },\n//   };\n\n//   fetch(`${BASE_URL}${END_POINT}?${param}`, option).then(resp =>\n//     console.log(resp)\n//   );\n// }\n// getCharacter();\nconst target = document.querySelector('.js-guard');\n\nlet options = {\n  root: null,\n  rootMargin: '200px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(callback, options);\nfunction callback(evt) {\n  console.log(evt);\n}\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst ENDPOINT = 'trending/movie/day';\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\nconst list = document.querySelector('.js-list');\nconst loadMore = document.querySelector('.js-load');\nlet currentPage = 1;\n\nloadMore.addEventListener('click', onLoad);\n\nfunction onLoad() {\n  currentPage += 1;\n  getTrending(currentPage)\n    .then(data => {\n      list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n      if (data.page === data.total_pages) {\n        loadMore.hidden = true;\n      }\n    })\n    .catch(err => console.log(err));\n}\n\nfunction getTrending(page = 1) {\n  return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n\n      return resp.json();\n    }\n  );\n}\ngetTrending()\n  .then(data => {\n    console.log(data);\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n    observer.observe(target);\n    if (data.page !== data.total_pages) {\n      loadMore.hidden = false;\n    }\n  })\n  .catch(err => console.log(err));\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, title }) => `<li>\n    <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n    <h2>${title}</h2>\n</li>`\n    )\n    .join('');\n}\n\n// // ПЕРЕРВА ДО 22.00\n\nlet counter = 0;\ndocument.addEventListener('scroll', onScroll);\n\nfunction onScroll() {\n  counter += 1;\n  console.log(counter);\n}\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const ENDPOINT = 'trending/movie/day';\n// const API_KEY = '345007f9ab440e5b86cef51be6397df1';\n// const list = document.querySelector('.js-list');\n\n// let currentPage = 1;\n// let options = {\n//   root: null,\n//   rootMargin: '300px',\n//   threshold: 1.0,\n// };\n\n// let observer = new IntersectionObserver(onLoad, options);\n// function onLoad(entries, observer) {\n//   console.log(entries);\n//   entries.forEach(entry => {\n//     if (entry.isIntersecting) {\n//       currentPage += 1;\n//       getTrending(currentPage)\n//         .then(data => {\n//           list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//           if (data.page === data.total_pages) {\n//             observer.unobserve(target);\n//           }\n//         })\n//         .catch(err => console.log(err));\n//     }\n//   });\n// }\n\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({ poster_path, title }) => `<li>\n//     <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n//     <h2>${title}</h2>\n// </li>`\n//     )\n//     .join('');\n// }\n\n// function getTrending(page = 1) {\n//   return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n//     resp => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n\n//       return resp.json();\n//     }\n//   );\n// }\n// getTrending()\n//   .then(data => {\n//     list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//     observer.observe(target);\n//   })\n//   .catch(err => console.log(err));\n"],"names":["target","document","querySelector","options","root","rootMargin","threshold","observer","IntersectionObserver","callback","evt","console","log","BASE_URL","ENDPOINT","API_KEY","list","loadMore","currentPage","onLoad","getTrending","then","data","insertAdjacentHTML","createMarkup","results","page","total_pages","hidden","catch","err","arguments","length","fetch","concat","resp","ok","Error","statusText","json","arr","map","param","poster_path","title","join","addEventListener","observe","counter","onScroll"],"version":3,"file":"index.2cf63469.js.map"}