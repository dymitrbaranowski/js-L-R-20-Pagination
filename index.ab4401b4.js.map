{"mappings":"AAsGA,IAAMA,OAASC,SAASC,cAAc,aAChCC,SAAW,gCACXC,SAAW,qBACXC,QAAU,mCACVC,KAAOL,SAASC,cAAc,YAEhCK,YAAc,EACdC,QAAU,CACZC,KAAM,KACNC,WAAY,QACZC,UAAW,GAGTC,SAAW,IAAIC,qBAAqBC,OAAQN,SAEhD,SAASM,OAAOC,EAASC,GACvBD,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,gBAERC,YADAb,aAAe,GAEZc,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZhB,KAAKmB,mBAAmB,YAAaC,aAAaJ,EAAKK,UACnDL,EAAKM,OAASN,EAAKO,aACrBb,EAASc,UAAU9B,O,IAGtB+B,OAAM,SAAAC,G,OAAOT,QAAQC,IAAIQ,E,OAKlC,SAASN,aAAaO,GACpB,OAAOA,EACJC,KACC,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,M,MAAY,sDACkCC,OAArBF,EAAY,WACjDE,OAD0DD,EAAM,gBAC1DC,OAAND,EAAM,e,IAGXE,KAAK,G,CAGV,SAASnB,c,IAAYQ,EAAAY,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAC1B,OAAOE,MAAM,GAAcJ,OAAXnC,UAA+BmC,OAApBlC,SAAS,aAA2BkC,OAAhBjC,QAAQ,UAAaiC,OAALV,IAAQP,MACrE,SAAAsB,GACE,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAGvB,OAAOH,EAAKI,M,IAIlB3B,cACGC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZhB,KAAKmB,mBAAmB,YAAaC,aAAaJ,EAAKK,UAEvDf,SAASoC,QAAQhD,O,IAElB+B,OAAM,SAAAC,G,OAAOT,QAAQC,IAAIQ,E","sources":["src/script.js"],"sourcesContent":["// XJlq9OFMcHAy8pAQK7xj\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n// const BASE_URL = 'https://the-one-api.dev/v2/';\n// const END_POINT = 'character';\n// const KEY = '7KAdfd-upWP7afmgHvI7';\n// function getCharacter() {\n//   const param = new URLSearchParams({\n//     limit: 30,\n//     page: 1,\n//   });\n\n//   const option = {\n//     method: 'GET',\n//     headers: {\n//       Authorization: `Bearer ${KEY}`,\n//     },\n//   };\n\n//   fetch(`${BASE_URL}${END_POINT}?${param}`, option).then(resp =>\n//     console.log(resp)\n//   );\n// }\n// getCharacter();\n// const target = document.querySelector('.js-guard');\n\n// let options = {\n//   root: null,\n//   rootMargin: '200px',\n//   threshold: 1.0,\n// };\n\n// let observer = new IntersectionObserver(onLoad, options);\n// function onLoad(evt) {\n//   console.log(evt);\n// }\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const ENDPOINT = 'trending/movie/day';\n// const API_KEY = '345007f9ab440e5b86cef51be6397df1';\n// const list = document.querySelector('.js-list');\n// const loadMore = document.querySelector('.js-load');\n// let currentPage = 1;\n\n// loadMore.addEventListener('click', onLoad);\n\n// function onLoad() {\n//   currentPage += 1;\n//   getTrending(currentPage)\n//     .then(data => {\n//       list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n//       if (data.page === data.total_pages) {\n//         loadMore.hidden = true;\n//       }\n//     })\n//     .catch(err => console.log(err));\n// }\n\n// function getTrending(page = 1) {\n//   return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n//     resp => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n\n//       return resp.json();\n//     }\n//   );\n// }\n// getTrending()\n//   .then(data => {\n//     console.log(data);\n//     list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n//     observer.observe(target);\n//     if (data.page !== data.total_pages) {\n//       loadMore.hidden = false;\n//     }\n//   })\n//   .catch(err => console.log(err));\n\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({ poster_path, title }) => `<li>\n//     <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n//     <h2>${title}</h2>\n// </li>`\n//     )\n//     .join('');\n// }\n\n// // ПЕРЕРВА ДО 22.00\n\n// let counter = 0;\n// document.addEventListener('scroll', onScroll);\n\n// function onScroll() {\n//   counter += 1;\n//   console.log(counter);\n// }\n\nconst target = document.querySelector('.js-guard');\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst ENDPOINT = 'trending/movie/day';\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\nconst list = document.querySelector('.js-list');\n\nlet currentPage = 1;\nlet options = {\n  root: null,\n  rootMargin: '200px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoad, options);\n\nfunction onLoad(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      getTrending(currentPage)\n        .then(data => {\n          console.log(data);\n          list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n          if (data.page === data.total_pages) {\n            observer.unobserve(target);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, title }) => `<li>\n    <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n    <h2>${title}</h2>\n</li>`\n    )\n    .join('');\n}\n\nfunction getTrending(page = 1) {\n  return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n\n      return resp.json();\n    }\n  );\n}\ngetTrending()\n  .then(data => {\n    console.log(data);\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n    observer.observe(target);\n  })\n  .catch(err => console.log(err));\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const ENDPOINT = 'trending/movie/day';\n// const API_KEY = '345007f9ab440e5b86cef51be6397df1';\n// const list = document.querySelector('.js-list');\n\n// let currentPage = 1;\n// let options = {\n//   root: null,\n//   rootMargin: '300px',\n//   threshold: 1.0,\n// };\n\n// let observer = new IntersectionObserver(onLoad, options);\n// function onLoad(entries, observer) {\n//   console.log(entries);\n//   entries.forEach(entry => {\n//     if (entry.isIntersecting) {\n//       currentPage += 1;\n//       getTrending(currentPage)\n//         .then(data => {\n//           list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//           if (data.page === data.total_pages) {\n//             observer.unobserve(target);\n//           }\n//         })\n//         .catch(err => console.log(err));\n//     }\n//   });\n// }\n\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({ poster_path, title }) => `<li>\n//     <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n//     <h2>${title}</h2>\n// </li>`\n//     )\n//     .join('');\n// }\n\n// function getTrending(page = 1) {\n//   return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n//     resp => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n\n//       return resp.json();\n//     }\n//   );\n// }\n// getTrending()\n//   .then(data => {\n//     list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//     observer.observe(target);\n//   })\n//   .catch(err => console.log(err));\n"],"names":["target","document","querySelector","BASE_URL","ENDPOINT","API_KEY","list","currentPage","options","root","rootMargin","threshold","observer","IntersectionObserver","onLoad","entries","observer1","forEach","entry","isIntersecting","getTrending","then","data","console","log","insertAdjacentHTML","createMarkup","results","page","total_pages","unobserve","catch","err","arr","map","param","poster_path","title","concat","join","arguments","length","fetch","resp","ok","Error","statusText","json","observe"],"version":3,"file":"index.ab4401b4.js.map"}